<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.takoyakki.backend.domain.mentoring.repository.MentoringReservationMapper">

    <!-- 예약 조회용 결과 매핑 -->
    <resultMap id="MentoringReservationResponseMap" type="com.takoyakki.backend.domain.mentoring.dto.reservation.MentoringReservationResponseDto">
        <result property="reservationId" column="reservation_id" />
        <result property="mentorName" column="mentor_name" />
        <result property="mentorImageUrl" column="mentor_image_url" />
        <result property="openChatUrl" column="open_chat_url" />
        <result property="memberName" column="member_name" />
        <result property="date" column="date" />
        <result property="status" column="status" />
        <result property="subject" column="subject" />
    </resultMap>

    <!-- 멘티가 예약 생성 -->
    <insert id="insertReservation" parameterType="com.takoyakki.backend.domain.mentoring.dto.reservation.MemberReservationRequestDto">
        INSERT INTO mentorings_reservation (
            mentor_id,
            member_id,
            introduction,
            subject,
            date
        )
        VALUES (
                   #{mentorId},
                   #{memberId},
                   #{introduction},
                   #{subject},
                   #{date}
               )
    </insert>

    <!-- 멘토가 본인의 예약 목록 조회 -->
    <select id="selectReservationsByMentorId" parameterType="long" resultMap="MentoringReservationResponseMap">
        SELECT
            r.reservation_id,
            r.member_id,
            r.date,
            r.subject,
            r.status,
            m.member_name,
            o.mentor_name,
            o.mentor_image_url,
            o.open_chat_url
        FROM
            mentorings_reservation r
                LEFT OUTER JOIN
            members m ON r.member_id = m.member_id
                LEFT OUTER JOIN
            mentors o ON r.mentor_id = o.mentor_id
        WHERE
            r.mentor_id = #{mentorId}
        ORDER BY
            r.date DESC
    </select>

    <!-- 멘티가 본인의 예약 목록 조회 -->
    <select id="selectReservationsByMemberId" parameterType="long" resultMap="MentoringReservationResponseMap">
        SELECT
            r.reservation_id,
            r.mentor_id,
            r.date,
            r.subject,
            r.status,
            m.member_name,
            o.mentor_name,
            o.mentor_image_url,
            o.open_chat_url
        FROM
            mentorings_reservation r
                LEFT OUTER JOIN
            members m ON r.member_id = m.member_id
                LEFT OUTER JOIN
            mentors o ON r.mentor_id = o.mentor_id
        WHERE
            r.member_id = #{memberId}
          AND r.status != 'CANCELED'
        ORDER BY
            r.date DESC
    </select>

    <!-- 멘토가 예약 수락 -->
    <update id="updateReservationToAccepted" parameterType="long">
        UPDATE mentorings_reservation
        SET
            status = 'ACCEPTED',
            updated_at = NOW()
        WHERE
            reservation_id = #{reservationId}
    </update>

    <!-- 멘토가 예약 거절 -->
    <update id="updateReservationToRejected" parameterType="map">
        UPDATE mentorings_reservation
        SET
            status = 'REJECTED',
            reject_reason = #{rejectReason},
            updated_at = NOW()
        WHERE
            reservation_id = #{reservationId}
    </update>

    <!-- 멘티가 예약 취소 -->
    <update id="cancelReservation" parameterType="map">
        UPDATE mentorings_reservation
        SET
            status = 'CANCELED',
            cancel_reason = #{cancelReason},
            updated_at = NOW()
        WHERE
            reservation_id = #{reservationId}
    </update>

    <!-- 멘토가 멘토링 완료 -->
    <update id="updateReservationToCompleted" parameterType="long">
        UPDATE mentorings_reservation
        SET
            status = 'COMPLETED',
            updated_at = NOW()
        WHERE
            reservation_id = #{reservationId}
    </update>

</mapper>
