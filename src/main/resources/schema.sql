SET client_encoding = 'UTF8';

-- #DDL
-- 유저
CREATE TABLE members (
    member_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    id VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    member_name VARCHAR(255) NULL,
    email VARCHAR(255) NULL,
    phone_number VARCHAR(255) NULL,
    nickname VARCHAR(255) NOT NULL,
    role VARCHAR(255) DEFAULT 'TRAINEE' NOT NULL,
    status VARCHAR(255) DEFAULT 'ACTIVE' NOT NULL,
    total_xp INTEGER DEFAULT 0 NULL,
    usable_points INTEGER DEFAULT 0 NULL,
    current_level INTEGER DEFAULT 1 NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NULL,
    is_deleted BOOLEAN DEFAULT FALSE NOT NULL,
    member_image_url VARCHAR(255) DEFAULT 'DEFAULT.com' NULL
);

CREATE TABLE mentors (
  mentor_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  company VARCHAR(255),
  position VARCHAR(255),
  description VARCHAR(255),
  avail_weekdays VARCHAR(255),
  completion_date TIMESTAMP(0),
  open_chat_url VARCHAR(255),
  is_deleted BOOLEAN,
  created_at TIMESTAMP(0),
  updated_at TIMESTAMP(0),
  mentor_image_url VARCHAR(255),
  mentor_name VARCHAR(255)
);

CREATE TABLE refresh_tokens (
	refresh_token_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	member_id BIGINT NOT NULL,
	token VARCHAR(255) NOT NULL,
	expired_at TIMESTAMP(0) NULL,
	created_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP NULL
);

-- 멘토링
CREATE TABLE mentorings_reservation (
  reservation_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  mentor_id BIGINT NOT NULL,
  mentee_id BIGINT NOT NULL,
  introduction TEXT NULL,
  date TIMESTAMP(0) NOT NULL,
  subject VARCHAR(255) DEFAULT NULL,
  status VARCHAR(255) DEFAULT 'PENDING' NOT NULL,
  created_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE NOT NULL,

  cancel_reason	VARCHAR(255)		NULL,
  reject_reason	VARCHAR(255)		NULL
);

CREATE TABLE mentorings (
  mentoring_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  mentor_id BIGINT NOT NULL,
  mentee_id BIGINT NOT NULL,
  reservation_id BIGINT NOT NULL,
  status VARCHAR(255) NOT NULL,
  created_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE NOT NULL
);

-- 챌린지
CREATE TABLE problems (
	problem_id	BIGINT	GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	title	VARCHAR(255)    NULL,
	contents	TEXT	NOT NULL,
	type	VARCHAR(255)	NULL,
	difficulty	INTEGER	NULL,
	subject	VARCHAR(255)	NULL,
	is_public	BOOLEAN	DEFAULT TRUE	NULL,
	created_at	TIMESTAMP(0)	DEFAULT CURRENT_TIMESTAMP	NULL,
	updated_at	TIMESTAMP(0)	DEFAULT CURRENT_TIMESTAMP	NULL,
	correct_answer	INTEGER	NOT NULL,
	is_deleted	BOOLEAN	DEFAULT FALSE	NULL,
	choices TEXT    DEFAULT '[]' NULL
);


CREATE TABLE problem_solving (
	problem_solving_id	BIGINT		GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	problem_id	BIGINT		NOT NULL,
	member_id	BIGINT		NOT NULL,
	submit_answer	INTEGER		NOT NULL,
	is_correct	BOOLEAN		NULL,
	points INTEGER		DEFAULT 0 NOT NULL,
	date	TIMESTAMP(0)		NULL,
	is_deleted	BOOLEAN		DEFAULT FALSE NOT NULL
);

CREATE TABLE daily_challenge_rankings (
	daily_ranking_id	BIGINT		GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	member_id	BIGINT		NOT NULL,
	rank_level	INTEGER		NULL,
	updated_at	TIMESTAMP(0)	DEFAULT CURRENT_TIMESTAMP	NULL,
	is_deleted	BOOLEAN		DEFAULT FALSE NOT NULL,
	points	INTEGER		NULL,
	date	DATE		NOT NULL
);

-- 학습일지
CREATE TABLE study_diary (
    diary_id    BIGINT      GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    member_id   BIGINT      NOT NULL,
    contents    VARCHAR(255),
    title       VARCHAR(255),
    subject     VARCHAR(255),
    created_at  TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    updated_at  TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    study_date  TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    ai_summary  TEXT,
    is_deleted  BOOLEAN DEFAULT FALSE,
    is_public   BOOLEAN,
    likes       INTEGER
);

CREATE TABLE diary_comments (
    comment_id   BIGINT       GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    diary_id     BIGINT       NOT NULL,
    member_id    BIGINT       NOT NULL,
    contents     VARCHAR(255),
    created_at   TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
    updated_at   TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
    is_deleted   BOOLEAN DEFAULT FALSE
);

-- 투두
CREATE TABLE todos (
   todo_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   member_id BIGINT NOT NULL,
   contents VARCHAR(255) NOT NULL,
   date DATE,
   is_checked BOOLEAN DEFAULT FALSE,
   created_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP NULL,
   updated_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP NULL,
   is_deleted BOOLEAN DEFAULT FALSE
);

-- 멤버 귀속 테이블
CREATE TABLE notification (
	notification_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	member_id BIGINT NOT NULL,
	title VARCHAR(255) NULL,
	contents VARCHAR(255) NULL,
	type VARCHAR(50) DEFAULT 'DEFAULT' NULL,
	is_confirmed BOOLEAN DEFAULT FALSE NULL,
	created_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP NULL
);

CREATE TABLE xp_histories (
	xp_history_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	member_id BIGINT NOT NULL,
	activity_type INTEGER NULL,
	xp_amount INTEGER NULL,
	reference_id BIGINT NULL,
	description TEXT NULL,
	created_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP NULL,
	is_deleted BOOLEAN NULL
);

CREATE TABLE badges (
	badge_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(255) NULL,
	description TEXT NULL,
	icon_url VARCHAR(255) NULL,
	unlock_condition TEXT NULL,
	required_level INTEGER NULL,
	is_active BOOLEAN DEFAULT TRUE NULL,
	created_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP NULL
);

CREATE TABLE member_badges (
	member_badge_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	member_id BIGINT NOT NULL,
	badge_id BIGINT NOT NULL,
	is_equipped BOOLEAN DEFAULT FALSE NULL,
	unlocked_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP NULL,
	is_deleted BOOLEAN NULL
);

-- 관리자 입력 테이블
CREATE TABLE students (
	student_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	student_name VARCHAR(255) NOT NULL,
	phone_number VARCHAR(255) NOT NULL
);

CREATE TABLE daily_learning (
	learning_id	BIGINT	GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	contents	VARCHAR(255)		NULL,
	title	VARCHAR(255)		NULL,
	subject	VARCHAR(255)		NULL,
	date	DATE	NOT NULL,
	created_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP NULL,
	updated_at TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP NULL
);


-- # DML
-- 1. members 테이블에 insert
INSERT INTO members (
    id, password, member_name, email, phone_number, nickname, role, status,
    total_xp, usable_points, current_level, created_at, updated_at, is_deleted
) VALUES
(
    'admin', '1234', '홍길동', 'hong@example.com', '010-1234-5678', '길동이',
    'TRAINEE', 'ACTIVE', 500, 100, 2, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, FALSE
),
(
    'test', '1234', '김철수', 'chulsoo@example.com', '010-2345-6789', '철수짱',
    'TRAINEE', 'ACTIVE', 1200, 300, 4, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, FALSE
),
(
    'user', '1234', '이영희', 'younghee@example.com', '010-3456-7890', '영희',
    'TRAINEE', 'ACTIVE', 3000, 500, 6, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, FALSE
),
(
    'alice', '1234', '최수정', 'alice@example.com', '010-4567-8901', '수정이',
    'MENTOR', 'ACTIVE', 800, 150, 3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, FALSE
),
(
    'bob', '1234', '박지훈', 'bob@example.com', '010-5678-9012', '지훈박',
    'MENTOR', 'INACTIVE', 200, 50, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, FALSE
),
(
    'carol', '1234', '한예린', 'carol@example.com', '010-6789-0123', '예린쨩',
    'MENTOR', 'ACTIVE', 4000, 700, 7, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, FALSE
);

-- 2. role이 MENTOR인 사람만 mentors 테이블에도 삽입
INSERT INTO mentors (
    mentor_name,
    mentor_image_url,
    company,
    position,
    description,
    avail_weekdays,
    completion_date,
    open_chat_url,
    is_deleted,
    created_at,
    updated_at
)
SELECT
    m.member_name,
    NULL,  -- 이미지 URL 미리 없으면 NULL로
    CASE m.id
        WHEN 'user' THEN 'AI 스타트업'
        WHEN 'alice' THEN '삼성전자'
        WHEN 'bob' THEN '네이버'
        WHEN 'carol' THEN '카카오'
        ELSE '기타'
    END,
    CASE m.id
        WHEN 'user' THEN 'AI 리서처'
        WHEN 'alice' THEN 'Frontend Developer'
        WHEN 'bob' THEN 'Backend Developer'
        WHEN 'carol' THEN 'DevOps Engineer'
        ELSE '멘토'
    END,
    CASE m.id
        WHEN 'user' THEN '머신러닝과 딥러닝 연구 중심의 교육 설계자입니다.'
        WHEN 'alice' THEN 'React, TypeScript 기반 UI 설계 경험을 나눕니다.'
        WHEN 'bob' THEN 'Spring Boot, JPA 성능 최적화를 도와드립니다.'
        WHEN 'carol' THEN 'CI/CD, Docker, Kubernetes 멘토링 가능'
        ELSE ''
    END,
    'MON,TUE,WED', -- 공통 요일 예시
    '2025-12-31 23:59:59',
    CASE m.id
        WHEN 'user' THEN 'https://open.kakao.com/o/younghee-ai'
        WHEN 'alice' THEN 'https://open.kakao.com/o/alice-dev'
        WHEN 'bob' THEN 'https://open.kakao.com/o/bob-dev'
        WHEN 'carol' THEN 'https://open.kakao.com/o/carol-dev'
        ELSE ''
    END,
    FALSE,
    NOW(),
    NOW()
FROM members m
WHERE m.role = 'MENTOR';


INSERT INTO students (student_name, phone_number)
VALUES
    ('김철수', '01012345678'),
    ('이영희', '01087654321'),
    ('최지은', '01098765432'),
    ('박준호', '01011223344'),
    ('이수민', '01055667788');

INSERT INTO daily_learning (contents, title, subject, date)
VALUES
('Java의 기본 데이터 타입에 대해 학습했습니다. int, char, boolean 등의 특징을 익혔습니다.',
        'Java 기본 데이터 타입',
        'JavaScript',
        '2025-06-15'),
('Python의 기본 데이터 타입에 대해 학습했습니다. int, char, boolean 등의 특징을 익혔습니다.',
        'Python 기본 데이터 타입',
        'Python',
        '2025-06-14'),
('Python의 기본 데이터 타입에 대해 학습했습니다. int, char, boolean 등의 특징을 익혔습니다.',
        'Python 기본 데이터 타입',
        'JAVA',
        '2025-06-20'),
('Python의 기본 데이터 타입에 대해 학습했습니다. int, char, boolean 등의 특징을 익혔습니다.',
        'Python 기본 데이터 타입',
        'React.js',
        '2025-06-16'),
('Python의 기본 데이터 타입에 대해 학습했습니다. int, char, boolean 등의 특징을 익혔습니다.',
        'Python 기본 데이터 타입',
        'Vue.js',
        '2025-06-22'),
('Python의 기본 데이터 타입에 대해 학습했습니다. int, char, boolean 등의 특징을 익혔습니다.',
        'Python 기본 데이터 타입',
        'Vue.js',
        '2025-06-23'),
('Python의 기본 데이터 타입에 대해 학습했습니다. int, char, boolean 등의 특징을 익혔습니다.',
        'Python 기본 데이터 타입',
        'Vue.js',
        '2025-05-23'),
('Python의 기본 데이터 타입에 대해 학습했습니다. int, char, boolean 등의 특징을 익혔습니다.',
        'Python 기본 데이터 타입',
        'Vue.js',
        '2025-06-24');

-- 멘토링
INSERT INTO mentorings_reservation (
    mentor_id,
    mentee_id,
    introduction,
    subject,
    date,
    status
)
VALUES
(
   1,
   1,
   'Spring',
   'Spring Boot JPA',
   '2025-06-20T14:30',
   'COMPLETED'
),(
   1,
   1,
   'Spring',
   'Spring Boot JPA',
   '2025-05-20T14:30',
                        'COMPLETED'
),(
   1,
   1,
   'Spring',
   'JAVA',
   '2025-06-21T14:30',
                        'COMPLETED'
);

INSERT INTO mentorings (
    mentor_id,
    mentee_id,
    reservation_id,
    status,
    created_at
) VALUES (
    '1',
    '1',
    1,
    'COMPLETED',
    NOW()
),(
    '1',
    '1',
    2,
    'COMPLETED',
    NOW()
 );

-- 챌린지
INSERT INTO problems (
            title,
            contents,
            difficulty,
            subject,
            correct_answer,
            created_at,
            updated_at
) VALUES (
    'React.js: 1',
    'React.js는 무엇인가요?',
    1,
    'React.js',
    1,
    '2025-06-22T21:36:55',
    '2025-06-22T21:36:55'
), (
    'React.js: 2',
    'React.js는 무엇인가요?',
    2,
    'React.js',
    2,
         '2025-06-22T21:36:55',
         '2025-06-22T21:36:55'
), (
    'React.js: 3',
    'React.js는 무엇인가요?',
    3,
    'React.js',
    3,
         '2025-06-22T21:36:55',
         '2025-06-22T21:36:55'
), (
    'React.js: 4',
    'React.js는 무엇인가요?',
    4,
    'React.js',
    4,
         '2025-06-22T21:36:55',
         '2025-06-22T21:36:55'
), (
    'React.js: 5',
    'React.js는 무엇인가요?',
    5,
    'React.js',
    5,
         '2025-06-22T21:36:55',
         '2025-06-22T21:36:55'
), (
    'Vue.js: 5',
    'Vue.js는 무엇인가요?',
    5,
    'Vue.js',
    5,
         '2025-06-22T21:36:55',
         '2025-06-22T21:36:55'
), (
    'React.js: 5',
    'React.js는 무엇인가요?',
    5,
    'React.js',
    5,
         '2025-06-23T21:36:55',
         '2025-06-23T21:36:55'
);

INSERT INTO problem_solving
(
    problem_id,
    member_id,
    submit_answer,
    is_correct,
    points,
    date
)
VALUES
    (
        1,
        1,
        1,
        'Y',
        1,
        '2025-06-25'
    )
 ,
    (
        2,
        1,
        2,
        'Y',
        2,
        '2025-06-25'
    )
 ,
    (
        3,
        1,
        1,
        'N',
        0,
        '2025-06-25'
    )
 ,
    (
        4,
        1,
        4,
        'Y',
        4,
        '2025-06-25'
    )
 ,
    (
        5,
        1,
        5,
        'Y',
        5,
        '2025-06-25'
    ),(
          1,
          2,
          1,
          'Y',
          1,
          '2025-06-25'
      ),
      (
          2,
          2,
          2,
          'Y',
          2,
          '2025-06-25'
      ),
      (
          3,
          2,
          1,
          'N',
          0,
          '2025-06-25'
      ),
      (
          4,
          2,
          4,
          'Y',
          4,
          '2025-06-25'
      ),
      (
          5,
          2,
          5,
          'Y',
          4,
          '2025-06-25'
      ),
      (
          6,
          2,
          5,
          'Y',
          4,
          CAST('2025-06-25' AS DATE)
      ),
      (
          6,
          3,
          5,
          'Y',
          4,
          CAST('2025-06-25' AS DATE)
      ),
      (
          6,
          4,
          5,
          'Y',
          4,
          CAST('2025-06-25' AS DATE)
      ),
      (
          6,
          4,
          5,
          'Y',
          4,
          CAST('2025-06-25' AS DATE)
      ),
      (
          6,
          5,
          5,
          'Y',
          4,
          CAST('2025-06-25' AS DATE)
      );

INSERT INTO daily_challenge_rankings
(
member_id,
rank_level,
points,
date
  )
VALUES
(1, 1, 15, CAST('2025-06-16' AS DATE)),
(2, 2, 14, CAST('2025-06-16' AS DATE)),
(3, 3, 13, CAST('2025-06-16' AS DATE)),
(1, 1, 15, CAST('2025-06-18' AS DATE)),
(2, 2, 12, CAST('2025-06-18' AS DATE)),
(1, 1, 15, CAST('2025-06-17' AS DATE)),
(2, 2, 14, CAST('2025-06-17' AS DATE));

INSERT INTO study_diary
(
    member_id,
    contents,
    title,
    subject,
    created_at,
    updated_at,
    study_date,
    ai_summary,
    is_deleted,
    is_public,
    likes
) VALUES
      (1, 'Java와 Spring Boot 기본 개념 정리', 'Java 스프링 입문', 'Java', NOW(), NOW(), '2025-06-19 10:00:00', '스프링 부트의 핵심 개념 요약', FALSE, TRUE, 5),
      (2, '데이터베이스 트랜잭션과 인덱스 이해', 'DB 트랜잭션 공부', 'Database', NOW(), NOW(), '2025-06-18 14:30:00', '트랜잭션의 중요성과 인덱스 활용법 요약', FALSE, FALSE, 3),
      (3, 'REST API 설계 원칙', 'REST API 설계', 'API', NOW(), NOW(), '2025-06-17 09:00:00', 'REST API의 기본 설계 원칙 설명', FALSE, TRUE, 10),
      (1, 'JPA와 Hibernate 매핑 이해', 'JPA 매핑', 'Java', NOW(), NOW(), '2025-06-16 16:00:00', '엔티티 매핑과 연관관계 설명', FALSE, TRUE, 7),
      (4, 'AWS EC2 인스턴스 생성 및 설정', 'AWS 입문', 'Cloud', NOW(), NOW(), '2025-06-15 11:00:00', 'AWS EC2 사용법과 설정 요약', FALSE, FALSE, 1);

INSERT INTO diary_comments (diary_id, member_id, contents)
VALUES
    (1, 1, '첫 번째 댓글입니다.'),
    (1, 1, '두 번째 댓글, 좋은 글이네요!'),
    (2, 1, '질문이 있습니다. 설명 부탁드려요.'),
    (3, 1, '감사합니다. 많은 도움이 됐어요.'),
    (2, 1, '흥미로운 내용이네요. 잘 읽었습니다.');

INSERT INTO todos (member_id, contents, date, is_checked, is_deleted)
VALUES
(1, '스터디 준비하기', '2025-06-22', false, false),
(1, '운동 1시간 하기', '2025-06-22', true, false),
(1, '강의 수강 완료', '2025-06-21', true, false),
(1, '코딩 연습 2문제', '2025-06-21', false, false),
(1, '회의 참석', '2025-06-20', true, false),
(1, '문서 작성', '2025-06-20', false, true),
(1, '이메일 정리', '2025-06-19', true, false),
(1, '플젝 리팩토링', '2025-06-19', false, false),
(1, '블로그 포스팅', '2025-06-18', true, false),
(1, '알고리즘 복습', '2025-06-18', false, false);
